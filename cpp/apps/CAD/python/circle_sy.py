#!/usr/bin/python

# https://www.geeksforgeeks.org/equation-of-circle-when-three-points-on-the-circle-are-given/

import sympy as sy

x0,x1,x2,x3,  y0,y1,y2,y3,   r  = sy.symbols( 'x0 x1 x2 x3   y0 y1 y2 y3   r' )

'''
solve = sy.solve( [ 
    (x1-x0)**2 + (y1-y0)**2 - r**2,  
    (x2-x0)**2 + (y2-y0)**2 - r**2,
    (x3-x0)**2 + (y3-y0)**2 - r**2 ], (x0,y0,r) )
    
names = ['x0','y0','r']
for s in solve:
    for i,ss in enumerate(s):
        print names[i]," :   ",
        print ss
        #print sy.cse( ss.simplify() )
    print "====================="

'''

x0_  =    ( x1**2*y2 - x1**2*y3 - x2**2*y1 + x2**2*y3 + x3**2*y1 - x3**2*y2 + y1**2*y2 - y1**2*y3 - y1*y2**2 + y1*y3**2 + y2**2*y3 - y2*y3**2)                                  / (2*(x1*y2 - x1*y3 - x2*y1 + x2*y3 + x3*y1 - x3*y2))
y0_  =    (-x1**2*x2 + x1**2*x3 + x1*x2**2 - x1*x3**2 + x1*y2**2 - x1*y3**2 - x2**2*x3 + x2*x3**2 - x2*y1**2 + x2*y3**2 + x3*y1**2 - x3*y2**2)                                  / (2*(x1*y2 - x1*y3 - x2*y1 + x2*y3 + x3*y1 - x3*y2))
r_   =    sy.sqrt( ( x1**2 - 2*x1*x2 + x2**2 + y1**2 - 2*y1*y2 + y2**2)*(x1**2 - 2*x1*x3 + x3**2 + y1**2 - 2*y1*y3 + y3**2)*(x2**2 - 2*x2*x3 + x3**2 + y2**2 - 2*y2*y3 + y3**2))/ (2*(x1*y2 - x1*y3 - x2*y1 + x2*y3 + x3*y1 - x3*y2))

denom = 1/( 2 * ( x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2) ) )
r  = sy.sqrt( ( (x1-x2)**2 + (y1-y2)**2) * ((x1-x3)**2 + (y1-y3)**2) * ((x2-x3)**2 + (y2-y3)**2) ) * denom
x0 = ( (x1**2 + y1**2)*(y2-y3)   +   (x2**2 + y2**2)*(y3-y1)   +   (x3**2+y3**2)*(y1-y2) ) * denom
y0 = ( (x1**2 + y1**2)*(x3-x2)   +   (x2**2 + y2**2)*(x1-x3)   +   (x3**2+y3**2)*(x2-x1) ) * denom

print "check x0 ", (x0 - x0_ ).simplify()
print "check y0 ", (y0 - y0_ ).simplify()
print "check r  ", (r  - r_  ).simplify()

print  "eq. p1 : ", (  (x1-x0)**2  +  (y1-y0)**2  -  r**2 ).expand().simplify() 
print  "eq. p2 : ", (  (x2-x0)**2  +  (y2-y0)**2  -  r**2 ).expand().simplify()
print  "eq. p3 : ", (  (x3-x0)**2  +  (y3-y0)**2  -  r**2 ).expand().simplify() 



'''

x0 :  (x1**2 + y1**2)*(y2-y3)   +  (x2**2 + y2**2)*(y1-y3)    +  (x3**2 + y3**2)*(y1-y2) 
y0 :  (x1**2 + y1**2)*(x3-x2)   +  (x3**2 + y3**2)*(x2-x1)    +  (x2**2 + y2**2)*(x1-x3) 



x0  :    ( x1**2*y2 - x1**2*y3 - x2**2*y1 + x2**2*y3 + x3**2*y1 - x3**2*y2 + y1**2*y2 - y1**2*y3 - y1*y2**2 + y1*y3**2 + y2**2*y3 - y2*y3**2)/(2*(x1*y2 - x1*y3 - x2*y1 + x2*y3 + x3*y1 - x3*y2))
y0  :    (-x1**2*x2 + x1**2*x3 + x1*x2**2 - x1*x3**2 + x1*y2**2 - x1*y3**2 - x2**2*x3 + x2*x3**2 - x2*y1**2 + x2*y3**2 + x3*y1**2 - x3*y2**2)/(2*(x1*y2 - x1*y3 - x2*y1 + x2*y3 + x3*y1 - x3*y2))
r   :    sqrt(
         ( x1**2 - 2*x1*x2 + x2**2 + y1**2 - 2*y1*y2 + y2**2)*(x1**2 - 2*x1*x3 + x3**2 + y1**2 - 2*y1*y3 + y3**2)*(x2**2 - 2*x2*x3 + x3**2 + y2**2 - 2*y2*y3 + y3**2))/(2*(x1*y2 - x1*y3 - x2*y1 + x2*y3 + x3*y1 - x3*y2))


denom = 1/(2*(x1*y2 - x1*y3 - x2*y1 + x2*y3 + x3*y1 - x3*y2))

denom = 0.5/( x1*(y2-y3) - x2*(y1-y3) - x3*(y1-y2)   )

(   x1**2 *y2 
  - x1**2 *y3
 
  - x2**2 *y1 
  + x2**2 *y3 

  + x3**2 *y1 
  - x3**2 *y2 

  + y1**2 *y2 
  - y1**2 *y3 

  - y2**2 *y1 
  + y2**2 *y3 

  + y3**2 *y1 
  - y3**2 *y2 )


(   x1**2 *( y2 - y3 )
  + y1**2 *( y2 - y3 )

  - x2**2 *( y1 - y3 )
  - y2**2 *( y1 - y3 )  

  + x3**2 *( y1 - y2 )  
  + y3**2 *( y1 - y2 ) 
)

x0 : (x1**2 + y1**2)*( y2 - y3 )   +    (x2**2 + y2**2)*( y1 - y3 )    +   ( x3**2 + y3**2 )*( y1 - y2 ) 
x0 : (x1**2 + y1**2)*( y2 - y3 )   +    (x2**2 + y2**2)*( y3 - y1 )    +   ( x3**2 + y3**2 )*( y1 - y2 ) 


(

-x1**2 * x2 
+x1**2 * x3 

+x2**2 * x1 
-x2**2 * x3

-x3**2 * x1 
+x3**2 * x2

-y1**2 * x2
+y1**2 * x3

+y2**2 * x1 
-y2**2 * x3

-y3**2 * x1      
+y3**2 * x2 



-x1**2 * (x2-x3)
-y1**2 * (x2-x3)
  
+x2**2 * (x1-x3) 
+y2**2 * (x1-x3)

-x3**2 * (x1-x2) 
-y3**2 * (x1-x2)      


-(x1**2 + y1**2 )*(x2-x3)
 (x2**2 + y2**2 )*(x1-x3)
-(x3**2 + y3**2 )*(x1-x2)

y0 : (x1**2 + y1**2 )*(x3-x2)   +  (x3**2 + y3**2 )*(x2-x1)     +  (x2**2 + y2**2 )*(x1-x3) 

r :

 ( x1**2 - 2*x1*x2 + x2**2    +    y1**2 - 2*y1*y2 + y2**2 )
*( x1**2 - 2*x1*x3 + x3**2    +    y1**2 - 2*y1*y3 + y3**2 )
*( x2**2 - 2*x2*x3 + x3**2    +    y2**2 - 2*y2*y3 + y3**2 )

r :   ((x1-x2)**2   +   (y1-y2)**2) * ((x1-x3)**2   +   (y1-y3)**2) * ((x2-x3)**2   +   (y2-y3)**2)




'''